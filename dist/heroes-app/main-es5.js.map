{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/api.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/dashboard/dashboard.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/layout/layout.component.ts","webpack:///src/app/layout/layout.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","ApiService","_http","error","get","pipe","formatErrors","url","headers","responseType","Blob","providedIn","routes","path","component","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","DashboardComponent","fb","authForm","group","required","console","log","value","onSubmit","HomeComponent","router","apiService","imageToShow","p","listConfig","type","artObj","isImageLoading","getArticles","article","map","a","obj","user","name","readable_publish_date","title","description","social_image","tag_list","modifiedArt","art","getImages","image","subscribe","images","articles","createImageFromBlob","navigateByUrl","reader","FileReader","addEventListener","push","result","readAsDataURL","setListTo","LayoutComponent","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  constructor(private _http: HttpClient) { \n    \n  }\n\n  private formatErrors(error: any) {\n    return  throwError(error.error);\n  }\n\n\n  getArticles():Observable<any>{\n    return this._http.get(\"https://cors-anywhere.herokuapp.com/http://dev.to/api/articles?per_page=20\")\n              .pipe(catchError(this.formatErrors));\n  }\n\n  getImages(url):Observable<Blob>{\n    let headers= { responseType: Blob };\n    return this._http.get('https://cors-anywhere.herokuapp.com/'+url, { responseType: 'blob' })\n             .pipe(catchError(this.formatErrors));\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DashboardComponent }   from './dashboard/dashboard.component';\nimport { HomeComponent } from './home/home.component';\n\nconst routes: Routes = [\n  { path: 'registration', component: DashboardComponent },\n  { path: 'home', component: HomeComponent},\n  { path: '', redirectTo: '/home', pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  \n}\n"," <!-- As a link -->\r\n<app-layout></app-layout>\r\n \r\n <router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'; // <-- NgModel lives here\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { HttpClientModule }    from '@angular/common/http';\nimport { HttpClientInMemoryWebApiModule } from 'angular-in-memory-web-api';\nimport { InMemoryDataService }  from './in-memory-data.service';\nimport { LayoutComponent } from './layout/layout.component';\nimport { HomeComponent } from './home/home.component';\nimport {NgxPaginationModule} from 'ngx-pagination'; \n \n@NgModule({\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    LayoutComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule, FormsModule, AppRoutingModule, HttpClientModule, ReactiveFormsModule,\n    NgxPaginationModule\n    // The HttpClientInMemoryWebApiModule module intercepts HTTP requests\n    // and returns simulated server responses.\n    // Remove it when a real server is ready to receive requests.\n      // HttpClientInMemoryWebApiModule.forRoot(InMemoryDataService, { dataEncapsulation: false }\n //)\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  authForm: FormGroup;\n  constructor(private fb: FormBuilder) { \n    this.authForm = this.fb.group({\n      'name': ['', Validators.required],\n      'email' : ['', Validators.required],\n      'password' : ['', Validators.required],\n      'confirmPassword' : ['', Validators.required]\n    });\n  }\n  \n\n  ngOnInit(): void {\n\n  }\n\n  onSubmit(){\n    console.log(this.authForm.value);\n  }\n}\n","<div class=\"container outer shadow p-3 mb-5 rounded\">\n  <h3>REGISTRATION </h3>\n  <hr>\n<form  [formGroup]=\"authForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n      <label for=\"form-name\">Name:</label>\n      <input id=\"form-name\" class=\"form-control\" formControlName=\"name\" placeholder=\"Username\" type=\"text\"/>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"form-email\">Email:</label>\n      <input id=\"form-email\" class=\"form-control\" formControlName=\"email\" placeholder=\"Email\" type=\"text\" />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"form-password\">Password:</label>\n      <input id=\"form-password\" class=\"form-control\" formControlName=\"password\" placeholder=\"Password\" type=\"password\"/>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"form-confirm-password\">Confirm Password:</label>\n      <input id=\"form-confirm-password\" class=\"form-control\" formControlName=\"confirmPassword\" placeholder=\"Password\" type=\"password\"/>\n    </div>\n    <div class=\"form-group\">\n      <button class=\"btn btn-primary\" type=\"submit\">Sign up</button>\n    </div>\n</form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport { mergeMap, delay, map, tap, pluck, filter } from 'rxjs/operators';\nimport { ArticleListConfig } from '../models/article-list-config.model';\nimport { Router } from '@angular/router';\nimport { of } from 'rxjs';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  imageToShow = [];\n  articles: any;\n  p: number = 1;\n  listConfig: ArticleListConfig = { type: 'all' };\n  isImageLoading: boolean;\n  artObj = [];\n  images;\n\n  constructor(private router: Router,\n    private apiService: ApiService) { \n  }\n\n  ngOnInit() {\n    this.isImageLoading = true;\n     this.apiService.getArticles()\n        .pipe(\n          // Getting all the articles in stream and mapping obj \n          map( article =>{\n         return article.map( (a : any) =>  {\n            let obj = {}\n            obj['userName'] = a.user.name\n            obj['publishDate'] = a.readable_publish_date\n            obj['title'] = a.title\n            obj['description'] = a.description\n            obj['image'] = a.social_image\n            obj['tagList'] = a.tag_list\n\n            return obj;\n           })\n          }), \n          // filtering all the images from modifiedArt and creating images from blob \n          map( modifiedArt =>{ \n              this.artObj = modifiedArt;\n              return modifiedArt.map( art => \n                {\n                  this.apiService.getImages(art.image)\n                    .subscribe( images => {\n                      this.images = images; \n                      console.log(this.images);\n                      this.articles = this.artObj;\n                      this.createImageFromBlob(images);          \n                    })                \n                })\n          })\n        )\n        .subscribe(() => this.isImageLoading = false );\n  }\n\n  setListTo(type: string){\n    if(type === 'feed'){\n      this.router.navigateByUrl('/registration');\n      return; \n    }\n    this.listConfig = {type: type};\n  }\n\n  createImageFromBlob(image: Blob) {\n    let reader = new FileReader();\n    reader.addEventListener(\"load\", () => {\n       this.imageToShow.push(reader.result);\n    }, false);\n \n    if (image) {\n       reader.readAsDataURL(image);\n    }\n }\n}\n","<div class=\"container\">\n    <div class=\"card feed\">\n        <div class=\"card-header\">\n            <ul class=\"nav nav-tabs card-header-tabs\">\n                <li class=\"nav-item\">\n                 <a class=\"nav-link\" \n                 [ngClass]=\"{'active': listConfig.type === 'feed'}\"\n                 (click)=\"setListTo('feed')\">Your Feed</a>\n                </li>\n                <li class=\"nav-item\">\n                 <a class=\"nav-link\" \n                 [ngClass]=\"{'active': listConfig.type === 'all'}\" \n                 (click)=\"setListTo('all')\">Global Feed</a>\n                </li>\n            </ul>\n        </div>\n    </div>\n    <div *ngIf=\"!articles\" class=\"spinner-border text-secondary\" role=\"status\">\n        <span class=\"sr-only\">Loading...</span>\n    </div>\n    <div *ngFor=\"let article of articles | paginate: { itemsPerPage: 5, currentPage: p } let i=index; \">\n        <div class=\"card feed shadow p-3 mb-3\">\n                <img *ngIf=\"!isImageLoading\"  [src]=\"imageToShow[i]\" class=\"card-img-top\">\n                <div class=\"card-body\">\n                    <span>{{article.userName}} </span><br>\n                    <span>{{article.publishDate}}</span>\n                    <h5 class=\"card-title\">{{article.title}}</h5>\n                    <p class=\"card-text\">{{article.description}}</p>\n                    <h6 *ngFor=\"let tag of article.tagList\">\n                        #{{tag}}\n                    </h6>\n                </div>\n        </div>\n        \n    </div>\n\n    <pagination-controls (pageChange)=\"p = $event\"></pagination-controls>\n \n\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.scss']\n})\nexport class LayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar fixed-top navbar-expand-lg navbar-expand-md navbar-expand-sm navbar-dark bg-dark\">\n    <div class=\"container\">\n      <span class=\"navbar-brand mb-0 h1\">Developer Posts</span>\n      <ul class=\"navbar-nav ml-auto\">\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"/home\">Home</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\"  routerLink=\"/sign-in\">Sign in </a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"/registration\">Sign up</a>\n          </li>\n      </ul>\n    </div>\n</nav>\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}